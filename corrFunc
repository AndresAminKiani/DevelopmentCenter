function [logBank] = corrFunc(imgDS_prob1_b4, col, row, time, correlationThreshold, filterSize)
clear ElementBankTotal ImgMeanTrial
for element = [1, 2, 3, 4, 5, 6, 7, 9] 
    % Image dataset selection
    Img{1} = imgDS_prob1_b4{element}; % select image
    Img{2} = imgDS_prob1_b4{element + 9}; % select conjugate image 

    % NAN help
    Img{1}(isnan(Img{1})) = 0;
    Img{2}(isnan(Img{2})) = 0;
    
    clear correlationBank Im ImgBank
    for side = [1 2]
        for trial = 1 : size(Img{side}, 4)
            Im{1} = imgaussfilt(Img{side}(row, col, time, 1), filterSize);
            Im{2}= imgaussfilt(Img{side}(row, col, time, trial), filterSize);
            M = fitlm(Im{2}(:), Im{1}(:));
            correlationBank{side, 1}(trial) = sqrt(M.Rsquared.Ordinary);
            disp(['Element: ', num2str(element), ' Trial: ', num2str(trial)])
        end
         correlationBank{side, 2} = correlationBank{side} > correlationThreshold;
         logBank{element, side} = correlationBank{side} > correlationThreshold;
         ImgBank{side} = squeeze(imgaussfilt(Img{side}(row, col, time, correlationBank{side, 2}), filterSize));
         ImgMeanTrial(:, :, side) = nanmean(ImgBank{side}, 3);
         ElementBankTotal{side, element} = ImgBank{side};
    end
    disp(['Number of trials above correlation threshold: ', num2str(sum(correlationBank{1, 2})), ' and ', ...
        num2str(sum(correlationBank{2, 2})), ' for the conjugate image,'])
    
    ElementBank{side, element} = ImgMeanTrial(:, :, 1);
    ElementBank{side, element} = ImgMeanTrial(:, :, 2);
end

clear Img Im M correlationBank ImgBank ImgMeanTrial ElementBankTotal ElementBank
end
